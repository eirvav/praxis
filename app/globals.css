@import "tailwindcss";

@plugin "tailwindcss-animate";

@custom-variant dark (&:is(.dark *));

@theme inline {
  --color-background: var(--background);
  --color-foreground: var(--foreground);
  --font-sans: var(--font-geist-sans);
  --font-mono: var(--font-geist-mono);
  --color-sidebar-ring: var(--sidebar-ring);
  --color-sidebar-border: var(--sidebar-border);
  --color-sidebar-accent-foreground: var(--sidebar-accent-foreground);
  --color-sidebar-accent: var(--sidebar-accent);
  --color-sidebar-primary-foreground: var(--sidebar-primary-foreground);
  --color-sidebar-primary: var(--sidebar-primary);
  --color-sidebar-foreground: var(--sidebar-foreground);
  --color-sidebar: var(--sidebar);
  --color-chart-5: var(--chart-5);
  --color-chart-4: var(--chart-4);
  --color-chart-3: var(--chart-3);
  --color-chart-2: var(--chart-2);
  --color-chart-1: var(--chart-1);
  --color-ring: var(--ring);
  --color-input: var(--input);
  --color-border: var(--border);
  --color-destructive-foreground: var(--destructive-foreground);
  --color-destructive: var(--destructive);
  --color-accent-foreground: var(--accent-foreground);
  --color-accent: var(--accent);
  --color-muted-foreground: var(--muted-foreground);
  --color-muted: var(--muted);
  --color-secondary-foreground: var(--secondary-foreground);
  --color-secondary: var(--secondary);
  --color-primary-foreground: var(--primary-foreground);
  --color-primary: var(--primary);
  --color-popover-foreground: var(--popover-foreground);
  --color-popover: var(--popover);
  --color-card-foreground: var(--card-foreground);
  --color-card: var(--card);
  --color-primaryStyling: var(--primaryStyling);
  --radius-sm: calc(var(--radius) - 4px);
  --radius-md: calc(var(--radius) - 2px);
  --radius-lg: var(--radius);
  --radius-xl: calc(var(--radius) + 4px);
}

:root {
  --background: #fff;
  --foreground: oklch(0.129 0.042 264.695);
  --card: oklch(1 0 0);
  --card-foreground: oklch(0.129 0.042 264.695);
  --popover: oklch(1 0 0);
  --popover-foreground: oklch(0.129 0.042 264.695);
  --primary: oklch(0.208 0.042 265.755);
  --primary-foreground: oklch(0.984 0.003 247.858);
  --secondary: oklch(0.968 0.007 247.896);
  --secondary-foreground: oklch(0.208 0.042 265.755);
  --muted: oklch(0.968 0.007 247.896);
  --muted-foreground: oklch(0.554 0.046 257.417);
  --accent: oklch(0.93 0.0334 272.79);
  --accent-foreground: oklch(0.208 0.042 265.755);
  --destructive: oklch(0.577 0.245 27.325);
  --destructive-foreground: oklch(0.577 0.245 27.325);
  --border: oklch(0.929 0.013 255.508);
  --input: oklch(0.929 0.013 255.508);
  --ring: oklch(0.704 0.04 256.788);
  --primaryStyling: #4F39F6;
  --chart-1: oklch(0.646 0.222 41.116);
  --chart-2: oklch(0.6 0.118 184.704);
  --chart-3: oklch(0.398 0.07 227.392);
  --chart-4: oklch(0.828 0.189 84.429);
  --chart-5: oklch(0.769 0.188 70.08);
  --radius: 0.625rem;
  --sidebar: #F1F5F9;
  --sidebar-foreground: #1e293b;
  --sidebar-primary: oklch(0.208 0.042 265.755);
  --sidebar-primary-foreground: oklch(0.984 0.003 247.858);
  --sidebar-accent: oklch(0.93 0.0334 272.79);
  --sidebar-accent-foreground: oklch(0.208 0.042 265.755);
  --sidebar-border: oklch(0.929 0.013 255.508);
  --sidebar-ring: oklch(0.704 0.04 256.788);


  --shadow-2xs: 0px 4px 8px -1px hsl(0 0% 0% / 0.05);
  --shadow-xs: 0px 4px 8px -1px hsl(0 0% 0% / 0.05);
  --shadow-sm: 0px 4px 8px -1px hsl(0 0% 0% / 0.10), 0px 1px 2px -2px hsl(0 0% 0% / 0.10);
  --shadow: 0px 4px 8px -1px hsl(0 0% 0% / 0.10), 0px 1px 2px -2px hsl(0 0% 0% / 0.10);
  --shadow-md: 0px 4px 8px -1px hsl(0 0% 0% / 0.10), 0px 2px 4px -2px hsl(0 0% 0% / 0.10);
  --shadow-lg: 0px 4px 8px -1px hsl(0 0% 0% / 0.10), 0px 4px 6px -2px hsl(0 0% 0% / 0.10);
  --shadow-xl: 0px 4px 8px -1px hsl(0 0% 0% / 0.10), 0px 8px 10px -2px hsl(0 0% 0% / 0.10);
  --shadow-2xl: 0px 4px 8px -1px hsl(0 0% 0% / 0.25);
  
}

@layer base {
  * {
    @apply border-border outline-ring/50;
  }
  body {
    @apply bg-background text-foreground;
  }
}

/* React Quill Editor Styles */
.quill {
  border-radius: var(--radius);
  border: 1px solid var(--border);
}

.ql-container {
  min-height: 150px;
  border-bottom-left-radius: var(--radius);
  border-bottom-right-radius: var(--radius);
  font-family: var(--font-sans);
  font-size: 1rem;
}

.ql-toolbar {
  border-top-left-radius: var(--radius);
  border-top-right-radius: var(--radius);
  border-bottom: 1px solid var(--border);
  background-color: var(--secondary);
}

.ql-editor {
  min-height: 150px;
  max-height: 500px;
  overflow-y: auto;
}

.ql-editor p {
  margin-bottom: 0.5rem;
}

.ql-snow .ql-picker {
  color: var(--foreground);
}

.ql-snow .ql-stroke {
  stroke: var(--foreground);
}

.ql-snow .ql-fill, .ql-snow .ql-stroke.ql-fill {
  fill: var(--foreground);
}

.ql-snow.ql-toolbar button:hover, 
.ql-snow .ql-toolbar button:hover,
.ql-snow.ql-toolbar button:focus, 
.ql-snow .ql-toolbar button:focus,
.ql-snow.ql-toolbar button.ql-active, 
.ql-snow .ql-toolbar button.ql-active,
.ql-snow.ql-toolbar .ql-picker-label:hover, 
.ql-snow .ql-toolbar .ql-picker-label:hover,
.ql-snow.ql-toolbar .ql-picker-label.ql-active, 
.ql-snow .ql-toolbar .ql-picker-label.ql-active,
.ql-snow.ql-toolbar .ql-picker-item:hover, 
.ql-snow .ql-toolbar .ql-picker-item:hover,
.ql-snow.ql-toolbar .ql-picker-item.ql-selected, 
.ql-snow .ql-toolbar .ql-picker-item.ql-selected {
  color: var(--primary);
}

.ql-snow.ql-toolbar button:hover .ql-stroke, 
.ql-snow .ql-toolbar button:hover .ql-stroke,
.ql-snow.ql-toolbar button:focus .ql-stroke, 
.ql-snow .ql-toolbar button:focus .ql-stroke,
.ql-snow.ql-toolbar button.ql-active .ql-stroke, 
.ql-snow .ql-toolbar button.ql-active .ql-stroke,
.ql-snow.ql-toolbar .ql-picker-label:hover .ql-stroke, 
.ql-snow .ql-toolbar .ql-picker-label:hover .ql-stroke,
.ql-snow.ql-toolbar .ql-picker-label.ql-active .ql-stroke, 
.ql-snow .ql-toolbar .ql-picker-label.ql-active .ql-stroke {
  stroke: var(--primary);
}

/* Styles for rendered HTML content in SlideViewer */
.prose {
  max-width: 65ch;
  color: var(--foreground);
}

.prose h1 {
  font-size: 2rem;
  font-weight: 700;
  margin-top: 1.5rem;
  margin-bottom: 1rem;
  line-height: 1.2;
}

.prose h2 {
  font-size: 1.5rem;
  font-weight: 600;
  margin-top: 1.4rem;
  margin-bottom: 0.8rem;
  line-height: 1.3;
}

.prose h3 {
  font-size: 1.25rem;
  font-weight: 600;
  margin-top: 1.3rem;
  margin-bottom: 0.6rem;
  line-height: 1.4;
}

.prose p {
  margin-bottom: 1rem;
  line-height: 1.6;
}

.prose ul, .prose ol {
  margin-top: 0.5rem;
  margin-bottom: 1rem;
  padding-left: 1.5rem;
}

.prose li {
  margin-bottom: 0.25rem;
  padding-left: 0.375rem;
}

.prose ul > li {
  list-style-type: disc;
}

.prose ol > li {
  list-style-type: decimal;
}

.prose a {
  color: var(--primary);
  text-decoration: underline;
  font-weight: 500;
}

.prose img {
  margin: 1rem auto;
  border-radius: 0.375rem;
  max-width: 100%;
  height: auto;
}

.prose strong, .prose b {
  font-weight: 700;
}

.prose em, .prose i {
  font-style: italic;
}

.prose blockquote {
  border-left: 3px solid var(--border);
  padding-left: 1rem;
  font-style: italic;
  margin: 1rem 0;
  color: var(--muted-foreground);
}

/* Custom Animations */
@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.animate-fadeIn {
  animation: fadeIn 0.5s ease-out forwards;
}

.animation-delay-100 {
  animation-delay: 100ms;
}

.animation-delay-200 {
  animation-delay: 200ms;
}

.animation-delay-300 {
  animation-delay: 300ms;
}

/* Hover Effects */
.hover-scale {
  transition: transform 0.3s ease;
}

.hover-scale:hover {
  transform: scale(1.02);
}

/* Auth Page Blob Animation */
@keyframes blob {
  0% {
    transform: translate(0px, 0px) scale(1);
  }
  33% {
    transform: translate(30px, -50px) scale(1.1);
  }
  66% {
    transform: translate(-20px, 20px) scale(0.9);
  }
  100% {
    transform: translate(0px, 0px) scale(1);
  }
}

.animate-blob {
  animation: blob 7s infinite;
}

.animation-delay-2000 {
  animation-delay: 2s;
}

.animation-delay-4000 {
  animation-delay: 4s;
}

/* Grid background pattern */
.bg-grid-indigo-100 {
  background-image: linear-gradient(to right, rgba(79, 70, 229, 0.1) 1px, transparent 1px),
                    linear-gradient(to bottom, rgba(79, 70, 229, 0.1) 1px, transparent 1px);
}

/* Custom Clerk Component Styling */
.cl-card, .cl-signIn-start, .cl-signUp-start, .cl-signUp-afterChangeEmailVerification,
.cl-signUp-afterResetPassword, .cl-signUp-passwordWithQRCode, .cl-waitlist-start {
  background-color: transparent !important;
  box-shadow: none !important;
}

.cl-internal-b3fm6y {
  display: none !important;
}

.cl-headerTitle, .cl-headerSubtitle {
  display: none !important;
}

.cl-socialButtonsIconButton {
  color: #4f46e5 !important;
}

.cl-socialButtonsBlockButton {
  border-color: #e0e7ff !important;
  color: #4f46e5 !important;
}

.cl-socialButtonsBlockButton:hover, .cl-socialButtonsBlockButton:focus {
  background-color: #f5f3ff !important;
}

.cl-footerActionLink, .cl-formButtonReset, .cl-formFieldAction {
  color: #4f46e5 !important;
}

.cl-footerActionLink:hover, .cl-formButtonReset:hover, .cl-formFieldAction:hover {
  color: #4338ca !important;
}

.cl-formButtonPrimary {
  background-color: #4f46e5 !important;
  text-transform: none !important;
}

.cl-formButtonPrimary:hover, .cl-formButtonPrimary:focus {
  background-color: #4338ca !important;
}

.cl-formFieldLabel {
  color: #4338ca !important;
}

.cl-formFieldInput {
  border-color: #c7d2fe !important;
}

.cl-formFieldInput:focus {
  border-color: #4f46e5 !important;
  box-shadow: 0 0 0 1px #4f46e5 !important;
}

.cl-dividerLine {
  background-color: #c7d2fe !important;
}

.cl-dividerText {
  color: #4f46e5 !important;
}

.cl-logoBox {
  display: none !important;
}

/* Fix for black box in footer and remaining white border issues */
.cl-footer, .cl-footer-powered, .cl-footerAction, .cl-footerActionText, .cl-footerWaitlist,
.cl-rootBox, .cl-signIn-root, .cl-waitlist-root, .cl-signUp-root {
  background-color: transparent !important;
  background: transparent !important;
}

.cl-footer {
  border-top: none !important;
  margin-top: 1rem !important;
}

.cl-footerActionLink {
  color: #4f46e5 !important;
  text-decoration: underline !important;
  font-weight: 500 !important;
}

.cl-footerWaitlist, .cl-footerAction, .cl-footerActionText {
  color: #4f46e5 !important;
}

.cl-card {
  border: none !important;
  box-shadow: none !important;
}

.cl-rootBox {
  box-shadow: none !important;
}

.cl-footer-powered {
  border-top: none !important;
  color: #4f46e5 !important;
  opacity: 0.6 !important;
}

/* Design cards */
.cl-card, .cl-main {
  background-color: transparent !important;
  border: none !important;
}

.cl-auth-form-body {
  background-color: transparent !important;
}

.cl-internal-b2utoc, .cl-internal-wkkub3, .cl-internal-16pjy5v {
  background-color: transparent !important;
}

/* Aggressive targeting for black footer boxes */
.cl-footerWaitlist, .cl-footer-powered, .cl-footer, 
div[class*="cl-internal"] {
  background-color: transparent !important;
  background: transparent !important;
  color: #4f46e5 !important;
  border: none !important;
  box-shadow: none !important;
}

/* Clerk development brand at bottom */
.cl-auth-footer {
  background-color: transparent !important;
  color: #4f46e5 !important;
}

/* Force all internal components to be transparent */
[class*="cl-internal-"] {
  background-color: transparent !important;
  background: transparent !important;
  border: none !important;
}

/* Target specific internal class that's commonly used for the black box */
.cl-internal-17gj9ym, .cl-internal-1vbvljd, .cl-internal-ovm4xk {
  background-color: transparent !important;
  background: transparent !important;
}

/* Fix for button colors - making sure they show properly with correct contrast */
.cl-formButtonPrimary, 
button[data-localization-key="formButtonPrimary"],
button[data-localization-key="userProfile.start.joinWaitlist"],
button[type="submit"] {
  background-color: #4f46e5 !important;
  color: white !important;
  font-weight: 500 !important;
  padding: 0.5rem 1rem !important;
  border-radius: 0.375rem !important;
}

.cl-formButtonPrimary:hover, 
button[data-localization-key="formButtonPrimary"]:hover,
button[data-localization-key="userProfile.start.joinWaitlist"]:hover,
button[type="submit"]:hover {
  background-color: #4338ca !important;
  color: white !important;
}

/* Styles for Clerk when logged in (user profile & user button menu) */
.cl-userButtonBox, .cl-userButtonTrigger, .cl-userButtonAvatarBox {
  /* Keep minimal styling for these */
}

.cl-userButtonPopoverCard {
  background-color: white !important;
  border-radius: 0.5rem !important;
  border: 1px solid rgba(0, 0, 0, 0.1) !important;
  box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06) !important;
  /* Reset any other custom styling */
  color: initial !important;
}

.cl-userButtonPopoverActions,
.cl-userButtonPopoverActionButton,
.cl-userButtonPopoverFooter,
.cl-navbar, 
.cl-account, 
.cl-accountSwitcherTrigger, 
.cl-profileSectionContent, 
.cl-profileSectionTitle,
.cl-profileSectionSubtitle,
.cl-userPreviewMainIdentifier, 
.cl-userPreviewSecondaryIdentifier {
  /* Reset to default styling */
  background-color: initial !important;
  color: initial !important;
  border: initial !important;
}

/* Only keep primary buttons styled */
.cl-profileSectionPrimaryButton {
  background-color: #4f46e5 !important;
  color: white !important;
}

.cl-profileSectionPrimaryButton:hover {
  background-color: #4338ca !important;
}

/* Additional fixes for button text rendering issues */
.cl-formButtonPrimary span, 
.cl-formButtonPrimary div,
button[type="submit"] span,
button[type="submit"] div,
button[data-localization-key] span,
button[data-localization-key] div {
  color: white !important;
}

/* Super aggressive button styling to override Clerk's defaults */
button.cl-formButtonPrimary,
button.cl-button,
button[type="submit"],
.cl-formButtonPrimary,
.cl-button[type="submit"] {
  background-color: #4f46e5 !important;
  color: white !important;
  border: none !important;
  /* Enforcing text content color for any children elements */
  & * {
    color: white !important;
  }
}

/* Style for text in the footer area */
div.cl-footer a {
  color: #4f46e5 !important;
}

/* Remove text overlay fix that's causing issues */
/* Fix for transparent text in buttons */
.cl-formButtonPrimary[data-localization-key], 
button[data-localization-key="userProfile.start.joinWaitlist"], 
button[data-localization-key="formButtonPrimary"] {
  position: relative;
}

/* Direct targeting of button text */
button[type="submit"] {
  color: white !important;
  position: relative !important;
  display: flex !important;
  justify-content: center !important;
  align-items: center !important;
}

button[data-localization-key="formButtonPrimary"]::before {
  content: "Continue";
  display: inline;
  color: white;
  position: absolute;
  left: 0;
  right: 0;
  text-align: center;
}

button[data-localization-key="userProfile.start.joinWaitlist"]::before {
  content: "Join the waitlist";
  display: inline;
  color: white;
  position: absolute;
  left: 0;
  right: 0;
  text-align: center;
}

/* Hide original text if it's causing issues */
button[data-localization-key="formButtonPrimary"] > span,
button[data-localization-key="userProfile.start.joinWaitlist"] > span {
  opacity: 0;
}

/* Override any remaining indigo styling in the user dropdown completely */
/* Target specific dropdown elements to match the second image */
.cl-userButtonPopoverCard,
.cl-userButtonPopoverActionButton,
.cl-userButtonBox,
.cl-userButtonPopoverFooter,
.cl-internal-17gj9ym,
.cl-userButtonPopoverActions {
  background-color: white !important;
  color: #333 !important;
  border-color: #ddd !important;
}

/* Avatar dropdown needs to be completely neutral */
.cl-userButtonPopoverActions button,
.cl-userButtonPopoverActions a,
.cl-userButtonPopoverFooter button,
.cl-userButtonPopoverFooter a,
.cl-footerAction,
.cl-footerActionText,
.cl-footerActionLink,
.cl-userButtonPopoverActionButtonIcon,
.cl-userButtonPopoverActionButtonText {
  color: #555 !important;
  background-color: transparent !important;
}

/* Avatar dropdown hover states */
.cl-userButtonPopoverActionButton:hover {
  background-color: #f5f5f5 !important;
}

/* Target the specific indigo button in dropdown */
.cl-userButtonPopoverCard button {
  color: #555 !important;
  background-color: transparent !important;
}

/* Reset any other Clerk UI elements to neutral colors */
[data-clerk-ui] *:not(button[type="submit"]) {
  background-color: inherit !important;
  color: inherit !important;
}

/* More specific ClerkProvider dropdown fixes */
/* Force white background on dropdown */
.cl-userButtonPopoverCard, 
.cl-userButtonPopoverRootBox {
  background-color: white !important;
  border: 1px solid #e5e7eb !important;
  box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05) !important;
  border-radius: 0.5rem !important;
  padding: 8px 0 !important;
}

/* Fix icon colors - make them dark */
.cl-userButtonPopoverActionButtonIcon svg,
.cl-userButtonPopoverActionButtonIcon svg *,
.cl-userButtonPopoverActionButtonIcon path {
  color: #374151 !important;
  fill: #374151 !important;
  stroke: #374151 !important;
}

/* Fix text colors */
.cl-userButtonPopoverActionButtonText {
  color: #374151 !important;
}

/* Improve hover states */
.cl-userButtonPopoverActionButton:hover {
  background-color: #f3f4f6 !important;
  transition: background-color 0.2s !important;
}

/* Make avatar circular */
.cl-userButtonAvatarBox, 
.cl-userButtonAvatarImage,
.cl-userButtonAvatarPrimary {
  border-radius: 50% !important;
  overflow: hidden !important;
}

/* More aggressive targeting for avatar icon */
[data-clerk-ui] .cl-userButtonAvatarBox,
[data-clerk-ui] .cl-userButtonAvatarImage,
[data-clerk-ui] .cl-userButtonAvatarPrimary {
  border-radius: 50% !important;
  overflow: hidden !important;
  width: 2rem !important;
  height: 2rem !important;
}

/* Fix for dropdown card and row spacing */
.cl-userButtonPopoverActionButton {
  padding: 8px 16px !important;
  margin: 0 !important;
  width: 100% !important;
  display: flex !important;
  align-items: center !important;
  border-radius: 0 !important;
}

/* More specific overrides for user button menu */
.cl-userButtonPopover, 
.cl-userButtonPopoverActions,
.cl-userButtonPopoverFooter {
  background-color: white !important;
  color: #374151 !important;
}

/* Ensure proper sizing for avatar box */
.cl-userButtonTrigger,
.cl-userButtonBox {
  border-radius: 50% !important;
}

/* ONLY target the popup - completely override with specific background fix */
.cl-userButtonPopover {
  background-color: white !important;
  border: 1px solid #e5e7eb !important;
  border-radius: 8px !important;
  box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06) !important;
  overflow: hidden !important;
}

/* Fix the background of the entire popup content area */
.cl-userButtonPopoverCard {
  background-color: white !important;
  padding: 0 !important; 
  overflow: hidden !important;
}

/* Target the action buttons container */
.cl-userButtonPopoverActions {
  background-color: white !important;
  padding: 0 !important;
}

/* Target each button individually */
.cl-userButtonPopoverActionButton {
  background-color: white !important;
  color: #374151 !important;
  transition: none !important;
}

/* Override hover effect specifically */
.cl-userButtonPopoverActionButton:hover {
  background-color: #f3f4f6 !important;
  color: #374151 !important;
}

/* Fix the footer area */
.cl-userButtonPopoverFooter {
  background-color: white !important;
  border-top: 1px solid #f3f4f6 !important;
  padding: 8px 0 !important;
}

/* Fix the security text */
.cl-userButtonPopoverFooter div {
  background-color: white !important;
}

/* Target every element inside the popover to ensure white background */
.cl-userButtonPopover * {
  background-color: inherit !important;
}

/* Target text content in action buttons */
.cl-userButtonPopoverActionButtonText {
  color: #374151 !important;
  font-weight: normal !important;
}

/* Override the development text coloring */
.cl-development-mode-badge {
  color: #f97316 !important; /* Orange color for development text */
}

/* Target "secured by clerk" text */
.cl-userButtonPopoverFooter path {
  fill: #6b7280 !important; /* Gray for "secured by" text */
}

/* COMPLETE RESET FOR CLERK POPUP - ULTRA SPECIFIC SELECTORS */
/* Main popup container with white bg */
div[aria-label="User Button Popover"],
div[aria-label="User Button Popover"] > div,
div[aria-modal="true"].cl-userButtonPopoverCard,
div.cl-userButtonPopoverCard[role="dialog"],
.cl-userButtonPopoverCard {
  background-color: white !important;
  border-radius: 8px !important;
  box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06) !important;
  padding: 0 !important;
  border: 1px solid #e5e7eb !important;
}

/* Target the entire popup content area */
div.cl-userButtonPopoverCard > div,
div.cl-userButtonPopoverCard > div > div {
  background-color: white !important;
}

/* Target the top section with user info */
div.cl-userButtonPopoverCard > div > div:first-child {
  background-color: white !important;
  padding: 16px !important;
  border-bottom: 1px solid #f3f4f6 !important;
}

/* Target the action buttons section */
div.cl-userButtonPopoverActions,
div.cl-userButtonPopoverActions > div {
  background-color: white !important;
  width: 100% !important;
}

/* Target each individual button */
button.cl-userButtonPopoverActionButton,
div.cl-userButtonPopoverActions button {
  background-color: white !important;
  width: 100% !important;
  display: flex !important;
  align-items: center !important;
  padding: 8px 16px !important;
  border-radius: 0 !important;
  border: none !important;
  color: #374151 !important;
  transition: background-color 0.2s !important;
}

/* Button hover state */
button.cl-userButtonPopoverActionButton:hover,
div.cl-userButtonPopoverActions button:hover {
  background-color: #f3f4f6 !important;
  color: #374151 !important;
}

/* Target button icons */
button.cl-userButtonPopoverActionButton svg,
button.cl-userButtonPopoverActionButton svg path,
div.cl-userButtonPopoverActions button svg,
div.cl-userButtonPopoverActions button svg path {
  color: #374151 !important;
  fill: #374151 !important;
}

/* Target button text */
button.cl-userButtonPopoverActionButton span,
div.cl-userButtonPopoverActions button span {
  color: #374151 !important;
  font-weight: normal !important;
}

/* Target footer section */
div.cl-userButtonPopoverFooter {
  background-color: white !important;
  border-top: 1px solid #f3f4f6 !important;
  padding: 8px 16px !important;
  display: flex !important;
  justify-content: center !important;
  align-items: center !important;
}

/* Use the most specific selectors possible for the dropdown */
body div[aria-modal="true"].cl-userButtonPopoverCard, 
body div.cl-userButtonPopoverCard[role="dialog"] {
  background-color: white !important;
}

/* Customize waitlist success message */
.cl-waitlistSuccess {
  margin-top: 1.5rem !important;
  padding: 1.5rem !important;
}

.cl-waitlistSuccessTitle {
  font-size: 1.5rem !important;
  font-weight: bold !important;
  color: #4f46e5 !important;
  margin-bottom: 1rem !important;
}

.cl-waitlistSuccessText {
  color: #4338ca !important;
  font-size: 1rem !important;
  margin-bottom: 1rem !important;
}

/* Add custom check mark for success */
.cl-waitlistSuccess::before {
  content: "" !important;
  display: block !important;
  width: 64px !important;
  height: 64px !important;
  margin: 0 auto 1rem auto !important;
  background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 24 24' stroke-width='1.5' stroke='%234f46e5' class='w-6 h-6'%3E%3Cpath stroke-linecap='round' stroke-linejoin='round' d='M9 12.75 11.25 15 15 9.75M21 12a9 9 0 1 1-18 0 9 9 0 0 1 18 0Z' /%3E%3C/svg%3E") !important;
  background-size: contain !important;
  background-repeat: no-repeat !important;
  background-position: center !important;
}

/* Add secondary message after success text */
.cl-waitlistSuccess::after {
  display: block !important;
  margin-top: 1rem !important;
  color: #6366f1 !important;
  font-size: 0.875rem !important;
  font-style: italic !important;
  opacity: 0.9 !important;
}